configurations.all {
	resolutionStrategy {
		force 'xml-apis:xml-apis:1.4.01'
	}
}

allprojects {
	apply plugin: 'jacoco'

	jacoco {
		toolVersion = "0.8.2"
	}

	clean {
		delete 'out'
	}

	formatSource {
		autoFix = true
		showStatusUpdates = false
	}

	check {
		dependsOn checkSourceFormatting
	}
}

configure(subprojects.findAll {!it.childProjects}) {
	buildCSS {
		enabled = false
	}

	configJSModules {
		enabled = false
	}

	copyLibs {
		enabled = false
	}

	replaceSoyTranslation {
		enabled = false
	}

	setUpTestableTomcat {
		enabled = false
	}

	startTestableTomcat {
		enabled = false
	}

	stopTestableTomcat {
		enabled = false
	}

	test {
		ignoreFailures = false
	}

	transpileJS {
		enabled = false
	}

	wrapSoyAlloyTemplate {
		enabled = false
	}
}

task codeCoverageTestReport(type: JacocoReport)

codeCoverageTestReport {
	def testType = project.findProperty("test.type") ?: "unit"

	def executionDataRegex

	if (testType == "unit") {
		executionDataRegex = "**/build/jacoco/test.exec"
	}

	if (testType == "integration") {
		executionDataRegex = "**/build/jacoco/testIntegration.exec"
	}

	if (testType == "client") {
		executionDataRegex = "**/build/jacoco/testClient.exec"
	}

	executionData fileTree(project.rootDir.absolutePath).include(executionDataRegex)

	subprojects.findAll { !it.childProjects }.each { sourceSets it.sourceSets.main }

	reports {
		xml {
			enabled = true
			destination file("${buildDir}/reports/jacoco/report.xml")
		}
	}
}