import org.kt3k.gradle.plugin.CoverallsPlugin

buildscript {
	dependencies {
		classpath group: "org.kt3k.gradle.plugin", name: "coveralls-gradle-plugin", version: "2.6.3"
	}

	repositories {
		maven {
			url "https://repository-cdn.liferay.com/nexus/content/groups/public"
		}
	}
}

apply plugin: CoverallsPlugin

configurations.all {
	resolutionStrategy {
		force 'xml-apis:xml-apis:1.4.01'
	}
}

allprojects {
	apply plugin: JacocoPlugin

	jacoco {
		toolVersion = "0.7.8"
	}

	clean {
		delete 'out'
	}

	check {
		dependsOn checkSourceFormatting
	}

	repositories {
		mavenLocal()

		maven {
			url "https://repository-cdn.liferay.com/nexus/content/groups/public"
		}
	}
}

configure(subprojects.findAll {!it.childProjects}) {
	sourceCompatibility = "1.8"
	targetCompatibility = "1.8"

	task copyJacocoAgent(type: Copy) {
		configurations.jacocoAgent.asFileTree.each {
			from(zipTree(it))
		}
		into "${rootDir}/build/jacoco"
	}

	test {
		ignoreFailures = false
	}

	setUpTestableTomcat {
		enabled = false
	}

	startTestableTomcat {
		enabled = false
	}

	stopTestableTomcat {
		enabled = false
	}
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
	additionalSourceDirs = files(subprojects.findAll{!it.childProjects}.sourceSets.main.allSource.srcDirs)
	sourceDirectories = files(subprojects.findAll{!it.childProjects}.sourceSets.main.allSource.srcDirs)
	classDirectories = files(subprojects.findAll{!it.childProjects}.sourceSets.main.output)
	executionData = files(subprojects.findAll{!it.childProjects}.jacocoTestReport.executionData)

	onlyIf = { true }

	reports {
		html.enabled = true
		xml.enabled = true
		xml.destination "${rootDir}/build/reports/jacoco/test/jacocoTestReport.xml"
		csv.enabled = false
	}

	doFirst {
		executionData = files(executionData.findAll { it.exists() })
	}
}

tasks.coveralls {
	dependsOn jacocoRootReport
}

coveralls.sourceDirs = files(subprojects.findAll{!it.childProjects}.sourceSets.main.allSource.srcDirs).collect {
	file -> file.absolutePath
}